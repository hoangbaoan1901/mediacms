apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: mediacms
  labels:
    app: postgres
spec:
  serviceName: db-headless
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:17.2-alpine
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
          - name: POSTGRES_USER
            value: mediacms  
          - name: POSTGRES_PASSWORD
            value: mediacms
          - name: POSTGRES_DB
            value: mediacms   
          - name: PGDATA
            value: /mediacms
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name

        volumeMounts:
          - mountPath: /mediacms
            name: pg-data
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - mediacms
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - mediacms
          initialDelaySeconds: 30
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
